#! /usr/bin/env node

const DefinitionFile = require('../lib/definition-file')
const NodejsOrgScraper = require('../lib/scraper-nodejs_org')

const scrapers = {
  '--nodejs': new NodejsOrgScraper({
    displayName: 'nodejs',
    baseUri: 'https://nodejs.org/dist/'
  }),

  '--nodejs-pre': new NodejsOrgScraper({
    displayName: 'nodejs release candidate',
    baseUri: 'https://nodejs.org/download/rc/'
  }),

  '--nodejs-nightly': new NodejsOrgScraper({
    displayName: 'nodejs nightly',
    baseUri: 'https://nodejs.org/download/nightly/'
  }),

  '--chakracore': new NodejsOrgScraper({
    name: 'chakracore',
    baseUri: 'https://nodejs.org/download/chakracore-release/'
  }),

  '--chakracore-pre': new NodejsOrgScraper({
    name: 'chakracore',
    displayName: 'chakracore release candidate',
    baseUri: 'https://nodejs.org/download/chakracore-rc/'
  }),

  '--chakracore-nightly': new NodejsOrgScraper({
    name: 'chakracore',
    displayName: 'chakracore nightly',
    baseUri: 'https://nodejs.org/download/chakracore-nightly/'
  })
}

const scrapersToRun = []

const options = {
  dryRun: false,
  overwrite: false,
  definitionPaths: (
    process.env.NODE_BUILD_DEFINITIONS || 'share/node-build'
  ).split(':')
}

process.argv.forEach((arg, i, argv) => {
  switch (arg) {
    case '-e':
    case '--regexp':
      options.pattern = argv[i + 1]
      break
    case '-f':
    case '--force':
      options.overwrite = true
      break
    case '-n':
    case '--dry-run':
      options.dryRun = true
      break
    case '--nodejs':
    case '--nodejs-pre':
    case '--nodejs-nightly':
    case '--chakracore':
    case '--chakracore-pre':
    case '--chakracore-nightly':
      scrapersToRun.push(arg)
      break
  }
})

if (!scrapersToRun.length) {
  scrapersToRun.push('--nodejs')
}

DefinitionFile.configure(options)

scrapersToRun.forEach(scraper => scrapers[scraper].scrape())
